<spring:beans xmlns="http://membrane-soa.org/proxies/1/"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                                            http://membrane-soa.org/proxies/1/ http://membrane-soa.org/schemas/proxies-1.xsd">


    <router retryInit="true" retryInitInterval="1000">

        <serviceProxy name="Client" port="2000">

            <!-- Protects a resource with OAuth2 - blocks on invalid login -->
            <oauth2Resource publicURL="http://localhost:2000/">
                <membrane src="http://localhost:8080" clientId="abc" clientSecret="def" scope="read" />
            </oauth2Resource>

            <!-- Use the information from the authentication server and pass it to the resource server (optional) -->
            <groovy>
                def oauth2 = exc.properties.oauth2
                exc.request.header.setValue('Authorization','Bearer ' + oauth2.accessToken)
                CONTINUE
            </groovy>

            <target host="localhost" port="8081"/>

        </serviceProxy>

        <serviceProxy port="9000">
            <adminConsole/>
        </serviceProxy>

    </router>

</spring:beans>